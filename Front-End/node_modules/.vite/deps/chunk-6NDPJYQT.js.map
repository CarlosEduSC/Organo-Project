{
  "version": 3,
  "sources": ["../../@babel/runtime/helpers/esm/extends.js", "../../@uiw/color-convert/esm/index.js"],
  "sourcesContent": ["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };", "import _extends from \"@babel/runtime/helpers/extends\";\nvar RGB_MAX = 255;\nvar HUE_MAX = 360;\nvar SV_MAX = 100;\n/**\n * ```js\n * rgbaToHsva({ r: 255, g: 255, b: 255, a: 1 }) //=> { h: 0, s: 0, v: 100, a: 1 }\n * ```\n */\nexport var rgbaToHsva = _ref => {\n  var {\n    r,\n    g,\n    b,\n    a\n  } = _ref;\n  var max = Math.max(r, g, b);\n  var delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  var hh = delta ? max === r ? (g - b) / delta : max === g ? 2 + (b - r) / delta : 4 + (r - g) / delta : 0;\n  return {\n    h: 60 * (hh < 0 ? hh + 6 : hh),\n    s: max ? delta / max * SV_MAX : 0,\n    v: max / RGB_MAX * SV_MAX,\n    a\n  };\n};\nexport var hsvaToHslString = hsva => {\n  var {\n    h,\n    s,\n    l\n  } = hsvaToHsla(hsva);\n  // return `hsl(${h}, ${s}%, ${l}%)`;\n  return \"hsl(\" + h + \", \" + Math.round(s) + \"%, \" + Math.round(l) + \"%)\";\n};\nexport var hsvaToHsvString = _ref2 => {\n  var {\n    h,\n    s,\n    v\n  } = _ref2;\n  return \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\";\n};\nexport var hsvaToHsvaString = _ref3 => {\n  var {\n    h,\n    s,\n    v,\n    a\n  } = _ref3;\n  return \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + a + \")\";\n};\nexport var hsvaToHslaString = hsva => {\n  var {\n    h,\n    s,\n    l,\n    a\n  } = hsvaToHsla(hsva);\n  return \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + a + \")\";\n};\nexport var hslStringToHsla = str => {\n  var [h, s, l, a] = (str.match(/\\d+/g) || []).map(Number);\n  return {\n    h,\n    s,\n    l,\n    a\n  };\n};\nexport var hslaStringToHsva = hslString => {\n  var matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  var match = matcher.exec(hslString);\n  if (!match) return {\n    h: 0,\n    s: 0,\n    v: 0,\n    a: 1\n  };\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1)\n  });\n};\nexport var hslStringToHsva = hslaStringToHsva;\nexport var hslaToHsva = _ref4 => {\n  var {\n    h,\n    s,\n    l,\n    a\n  } = _ref4;\n  s *= (l < 50 ? l : SV_MAX - l) / SV_MAX;\n  return {\n    h: h,\n    s: s > 0 ? 2 * s / (l + s) * SV_MAX : 0,\n    v: l + s,\n    a\n  };\n};\nexport var hsvaToHsla = _ref5 => {\n  var {\n    h,\n    s,\n    v,\n    a\n  } = _ref5;\n  var hh = (200 - s) * v / SV_MAX;\n  return {\n    h,\n    s: hh > 0 && hh < 200 ? s * v / SV_MAX / (hh <= SV_MAX ? hh : 200 - hh) * SV_MAX : 0,\n    l: hh / 2,\n    a\n  };\n};\nexport var hsvaStringToHsva = hsvString => {\n  var matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  var match = matcher.exec(hsvString);\n  if (!match) return {\n    h: 0,\n    s: 0,\n    v: 0,\n    a: 1\n  };\n  return {\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? SV_MAX : 1)\n  };\n};\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nvar angleUnits = {\n  grad: HUE_MAX / 400,\n  turn: HUE_MAX,\n  rad: HUE_MAX / (Math.PI * 2)\n};\nexport var parseHue = function parseHue(value, unit) {\n  if (unit === void 0) {\n    unit = 'deg';\n  }\n  return Number(value) * (angleUnits[unit] || 1);\n};\nexport var hsvStringToHsva = hsvaStringToHsva;\nexport var rgbaStringToHsva = rgbaString => {\n  var matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  var match = matcher.exec(rgbaString);\n  if (!match) return {\n    h: 0,\n    s: 0,\n    v: 0,\n    a: 1\n  };\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? SV_MAX / RGB_MAX : 1),\n    g: Number(match[3]) / (match[4] ? SV_MAX / RGB_MAX : 1),\n    b: Number(match[5]) / (match[6] ? SV_MAX / RGB_MAX : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? SV_MAX : 1)\n  });\n};\nexport var rgbStringToHsva = rgbaStringToHsva;\n\n/** Converts an RGBA color plus alpha transparency to hex */\nexport var rgbaToHex = _ref6 => {\n  var {\n    r,\n    g,\n    b\n  } = _ref6;\n  var bin = r << 16 | g << 8 | b;\n  return \"#\" + (h => new Array(7 - h.length).join('0') + h)(bin.toString(16));\n};\nexport var rgbaToHexa = _ref7 => {\n  var {\n    r,\n    g,\n    b,\n    a\n  } = _ref7;\n  var alpha = typeof a === 'number' && (a * 255 | 1 << 8).toString(16).slice(1);\n  return \"\" + rgbaToHex({\n    r,\n    g,\n    b,\n    a\n  }) + (alpha ? alpha : '');\n};\nexport var hexToHsva = hex => rgbaToHsva(hexToRgba(hex));\nexport var hexToRgba = hex => {\n  var htemp = hex.replace('#', '');\n  if (/^#?/.test(hex) && htemp.length === 3) {\n    hex = \"#\" + htemp.charAt(0) + htemp.charAt(0) + htemp.charAt(1) + htemp.charAt(1) + htemp.charAt(2) + htemp.charAt(2);\n  }\n  var reg = new RegExp(\"[A-Za-z0-9]{2}\", 'g');\n  var [r, g, b = 0, a] = hex.match(reg).map(v => parseInt(v, 16));\n  return {\n    r,\n    g,\n    b,\n    a: (a != null ? a : 255) / RGB_MAX\n  };\n};\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport var hsvaToRgba = _ref8 => {\n  var {\n    h,\n    s,\n    v,\n    a\n  } = _ref8;\n  var _h = h / 60,\n    _s = s / SV_MAX,\n    _v = v / SV_MAX,\n    hi = Math.floor(_h) % 6;\n  var f = _h - Math.floor(_h),\n    _p = RGB_MAX * _v * (1 - _s),\n    _q = RGB_MAX * _v * (1 - _s * f),\n    _t = RGB_MAX * _v * (1 - _s * (1 - f));\n  _v *= RGB_MAX;\n  var rgba = {};\n  switch (hi) {\n    case 0:\n      rgba.r = _v;\n      rgba.g = _t;\n      rgba.b = _p;\n      break;\n    case 1:\n      rgba.r = _q;\n      rgba.g = _v;\n      rgba.b = _p;\n      break;\n    case 2:\n      rgba.r = _p;\n      rgba.g = _v;\n      rgba.b = _t;\n      break;\n    case 3:\n      rgba.r = _p;\n      rgba.g = _q;\n      rgba.b = _v;\n      break;\n    case 4:\n      rgba.r = _t;\n      rgba.g = _p;\n      rgba.b = _v;\n      break;\n    case 5:\n      rgba.r = _v;\n      rgba.g = _p;\n      rgba.b = _q;\n      break;\n  }\n  rgba.r = Math.round(rgba.r);\n  rgba.g = Math.round(rgba.g);\n  rgba.b = Math.round(rgba.b);\n  return _extends({}, rgba, {\n    a\n  });\n};\nexport var hsvaToRgbString = hsva => {\n  var {\n    r,\n    g,\n    b\n  } = hsvaToRgba(hsva);\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n};\nexport var hsvaToRgbaString = hsva => {\n  var {\n    r,\n    g,\n    b,\n    a\n  } = hsvaToRgba(hsva);\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n};\nexport var rgbaToRgb = _ref9 => {\n  var {\n    r,\n    g,\n    b\n  } = _ref9;\n  return {\n    r,\n    g,\n    b\n  };\n};\nexport var hslaToHsl = _ref10 => {\n  var {\n    h,\n    s,\n    l\n  } = _ref10;\n  return {\n    h,\n    s,\n    l\n  };\n};\nexport var hsvaToHex = hsva => rgbaToHex(hsvaToRgba(hsva));\nexport var hsvaToHexa = hsva => rgbaToHexa(hsvaToRgba(hsva));\nexport var hsvaToHsv = _ref11 => {\n  var {\n    h,\n    s,\n    v\n  } = _ref11;\n  return {\n    h,\n    s,\n    v\n  };\n};\nexport var color = str => {\n  var rgb;\n  var hsl;\n  var hsv;\n  var rgba;\n  var hsla;\n  var hsva;\n  var hex;\n  var hexa;\n  if (typeof str === 'string' && validHex(str)) {\n    hsva = hexToHsva(str);\n    hex = str;\n  } else if (typeof str !== 'string') {\n    hsva = str;\n  }\n  if (hsva) {\n    hsv = hsvaToHsv(hsva);\n    hsla = hsvaToHsla(hsva);\n    rgba = hsvaToRgba(hsva);\n    hexa = rgbaToHexa(rgba);\n    hex = hsvaToHex(hsva);\n    hsl = hslaToHsl(hsla);\n    rgb = rgbaToRgb(rgba);\n  }\n  return {\n    rgb,\n    hsl,\n    hsv,\n    rgba,\n    hsla,\n    hsva,\n    hex,\n    hexa\n  };\n};\nexport var getContrastingColor = str => {\n  if (!str) {\n    return '#ffffff';\n  }\n  var col = color(str);\n  var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n  return yiq >= 128 ? '#000000' : '#ffffff';\n};\nexport var equalColorObjects = (first, second) => {\n  if (first === second) return true;\n  for (var prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (first[prop] !== second[prop]) return false;\n  }\n  return true;\n};\nexport var equalColorString = (first, second) => {\n  return first.replace(/\\s/g, '') === second.replace(/\\s/g, '');\n};\nexport var equalHex = (first, second) => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\nexport var validHex = hex => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);"],
  "mappings": "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",
  "names": ["parseHue"]
}
